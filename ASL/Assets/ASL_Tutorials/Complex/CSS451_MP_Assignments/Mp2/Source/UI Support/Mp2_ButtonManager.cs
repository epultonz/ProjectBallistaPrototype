using System.Collections;
using System.Collections.Generic;
using System.Runtime.CompilerServices;
using UnityEngine;
using UnityEngine.UI;

namespace Mps
{
    public class Mp2_ButtonManager : MonoBehaviour
    {
        public Button mDeleteButton = null;
        public Mp2_XfromControl mXform = null;
        public Button mSpawnPrefab = null;

        private GameObject mSelected;
        // Start is called before the first frame update
        void Start()
        {
            Debug.Assert(mDeleteButton != null);
            Debug.Assert(mXform != null);
            mDeleteButton.interactable = false;
        }

        public void SetDeleteInteractable(GameObject g)
        {
            mSelected = g;
            if (g != null)
            {
                mDeleteButton.interactable = true;
            }
            else
            {
                mDeleteButton.interactable = false;
            }
        }

        public void DeleteObject()
        {
            if (mSelected != null)
            {
                mSelected.GetComponent<ASL.ASLObject>().DeleteObject();
            }
            mSelected = null;
            mXform.SetSelectedObject(mSelected);
            SetDeleteInteractable(mSelected);
        }

        public void SpawnPrefab()
        {
            float randomX = Random.Range(-5.0f, 5.0f);
            float randomY = Random.Range(0.0f, 3.0f);
            float randomZ = Random.Range(-5.0f, 5.0f);
            ASL.ASLHelper.InstanitateASLObject("_ASL_ExamplePrefab", new Vector3(randomX, randomY, randomZ), Quaternion.identity, "", GetType().Namespace + "." + GetType().Name, "CreatedGameObject", 
                GetType().Namespace + "." + GetType().Name, "CancelledClaimRecovery",
                GetType().Namespace + "." + GetType().Name, "MyFloatFunction");
        }

        public static void CreatedGameObject(GameObject _myGameObject)
        {
            Debug.Log("Caller-Object ID: " + _myGameObject.GetComponent<ASL.ASLObject>().m_Id);
            _myGameObject.GetComponent<ASL.ASLObject>().SendAndSetClaim(() =>
            {
                float[] myFloats = new float[] { 1.1f, 2.5f, 3.4f, 4.9f };
                _myGameObject.GetComponent<ASL.ASLObject>().SendFloat4(myFloats);
            });
        }

        public static void MyFloatFunction(float[] _floats)
        {
            for (int i = 0; i < _floats.Length; i++)
            {
                Debug.Log("Value Sent: " + _floats[i]);
            }
        }

        public static void CancelledClaimRecovery(string _id, int _cancelledCallbacks)
        {
            Debug.LogWarning("We are going to cancel " + _cancelledCallbacks +
                " callbacks generated by a claim for object: " + _id + " rather than try to recover.");
        }
    }
}