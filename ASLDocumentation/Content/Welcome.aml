<?xml version="1.0" encoding="utf-8"?>
<topic id="6c9b0708-99b6-479a-a974-e4fd191a7d8b" revisionNumber="1">
	<developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
		<introduction>
			<para>Welcome to the Augmented Space Library (ASL) Documentation System. Here you will find documentation on how ASL works so you can futher improve its functionaility, as well as find documentation on
			demos within ASL to better understand how they work and how you can use ASL for your own multiplayer projects.</para>
			
			<para>ASL is being built with Unity 2018.3 and GameSparks (https://www.gamesparks.com/). </para>
		</introduction>

		<section>
			<title>Getting Started</title>
			<content>
				<para> Steps to install ASL in your Unity project:
				<list class="bullet">
					<listItem>
						<para><legacyBold><localUri>Download ASL</localUri></legacyBold> Download this project, open Unity, and select the ASL folder.</para>
					</listItem>

					<listItem>
						<para><legacyBold><localUri>Setting up GameSparks</localUri></legacyBold> Locate "GameSparksSettings" in GameSparks/Resources. Then enter and save the following information
						<list class="bullet">
							<listItem><para><legacyBold>Api Key: </legacyBold>Ask Kelvin</para></listItem>
							<listItem><para><legacyBold>Api Secret: </legacyBold>Ask Kelvin</para></listItem>
							<listItem><para><legacyBold>Credential: </legacyBold>device</para></listItem>
							<listItem><para><legacyBold>Preview Build: </legacyBold>true</para></listItem>
							<listItem><para><legacyBold>Debug Build: </legacyBold>(Optional) true</para></listItem>	
						</list>
						</para>
					</listItem>

					<listItem>
						<para><legacyBold><localUri>Connecting to other players </localUri></legacyBold>There are two ways in which you can connect players to each other for either 
						testing your application or using it. The first is through the use of the provided <legacyBold>LobbyScene</legacyBold>. If you use 
						this method, you must ensure you always launch from this scene and include the name of the scene you want to launch after players ready up 
						via the "Starting Scene" field in the Unity Editor under the LobbyManager Script found in the Lobby Manager GameObject. The second method 
						allows you to connect from whatever scene you want. To use this method, you must attach the <legacyBold>QuickConnect</legacyBold> script
						to an empty GameObject and place that empty GameObject in the Unity Hierarchy window at the very top so it executes first. You must also pick a unique
						room name and the starting scene for players to transition to after connecting and readying up with each other. If your room name is not unique, then
						you will join another ASL user's room. The starting scene can be the name of the scene you are currently working in. However, 
						<legacyBold>QuickConnect</legacyBold> should only exist in one, and only one scene in your project if you use it at all.
						 </para>
					</listItem>

					<listItem>
						<para><legacyBold><localUri>Using ASL </localUri></legacyBold>After setting up your project so it will connect with other players, either through the LobbyScene scene or
						 the QuickConnect script, you must do one more thing before ASL is ready. You have to attach the 
						 <legacyBold>GameController</legacyBold> script to an empty GameObject. This script must be included once, and only once,
						 in each and every scene in your ASL project. </para>
					</listItem>
				</list>
				</para>

				<para>For any additional help in installing, using, or modifying ASL, please contact Kelvin Sung.</para>
			</content>
		</section>
		
		<section>
			<title>Adding documentation</title>
			<content>
				<para> Steps to add to this documentation:
				<list class="bullet">
					<listItem>
						<para><legacyBold><localUri>SandCastle Installation: </localUri></legacyBold> Go here https://randynghiem.wordpress.com/2015/06/18/how-to-set-up-sandcastle-help-file-builder-with-visual-studio-2015/
						and follow the steps provided. When you are actually installing SandCastle, install everything it desires.</para>
					</listItem>

					<listItem>
						<para><legacyBold><localUri>Ticking the XML Documentation box</localUri></legacyBold> Right click in Visual Studios on "Assembly-CSharp" and go to properties. If nothing shows up then you need to
						allow Unity properties to be visible in Visual Studios. To do this, follow these directions: https://answers.unity.com/questions/1140063/cant-open-project-property-in-visual-studio-2015-w.html
						Once in the properties, go to build, and tick the "XML documentation file:" check box. An image of what it looks like can be found in the first link. WARNING: Rather annoying, everytime you interact
						with, run, or even focus on Unity, this file gets rewritten and this checkbox becomes unchecked. If you build SandCastle when this box is unchecked, no errors will appear, instead your documentation
						file will be blank. 
						</para>
					</listItem>

					<listItem>
						<para><legacyBold><localUri>Adding SandCastle to Visual Studios </localUri></legacyBold>Now that you have SandCastle installed and Visual Studio project properties set up, you need to add SandCaslte
						to your project. If the current documentation file (where you got this information from) is no longer available, then you'll need to add a new SandCastle project.
						To do this, right click your Solution in Visual Studios and Add New Project. Then select Documentation -> Sandcastle Help File Builder Project. After adding this, go to the "Documentation
						Sources" folder and add "Assembly-CSharp.dll" which should also automatically add "Assembly-CSharp.xml", but if it doesn't, add it yourself. You can find "Assembly-CSharp.dll" in 
						"ASL\Temp\bin\Debug\" you right click and build "Assembly-CSharp" inside of Visuual Studios. After adding this documentation sources, then right click and
						build your SandCastle Documentation Folder. After this, just go to where it was built and go into the "Help" folder to find your documentation. If this documentation still exists and just needs updating,
						then instead of creating a new SandCastle project, just add this one instead (ASLDocumentation.shfbproj) and then build.
						 </para>
					</listItem>
				</list>
				</para>

				<para>For any additional help in installing, using, or modifying ASL, please contact Kelvin Sung.</para>
			</content>
		</section>

		<relatedTopics>
			<link xlink:href="7d25745e-09fa-48a2-a09f-f003a9ecf876" />
			
		</relatedTopics>
	</developerConceptualDocument>
</topic>
